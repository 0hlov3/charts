# Default values for gotosocial.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: superseriousbusiness/gotosocial
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # cert-manager.io/cluster-issuer: "letsencrypt"
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: tls-gotosocial-general
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 512Mi

gotosocial:
  strategy:
    type: Recreate
  persistence:
    enabled: false
    accessMode: "ReadWriteOnce"
    size: "10Gi"
    #storageClass: ""
  tmpfs:
    enabled: false
    size: "1Gi"
  config:
    logLevel: "info"
    logDBQueries: false
    applicationName: "gotosocial"
    landingPageUser: ""
    host: ""
    accountDomain: ""
    protocol: "https"
    bindAddress: "0.0.0.0"
    trustedProxies:
      - "10.0.0.0/8"
      - "172.16.0.0/12"
      - "192.168.0.0/16"
    db:
      sqliteAddress: "/gotosocial/storage/sqlite.db"
      maxOpenConnsMultiplier: "8"
      sqliteSynchronous: "NORMAL"
      sqliteCacheSize: "8MiB"
      sqliteBusyTimeout: "30m"
      sqliteTmpdir: "/gotosocial/storage/"
      visibilitySweepFreq: "1m"
      cache:
        enabled: false
        visibilityMaxSize: "2000"
        visibilityTTL: "30m"
        gts:
          accountMaxSize: "2000"
          accountTTl: "30m"
          accountSweepFreq: "1m"
          blockMaxSize: "1000"
          blockTTl: "24h"
          blockSweepFreq: "1m"
          domainBlockMaxSize: "2000"
          domainBlockTTl: "24h"
          domainBlockSweepFreq: "1m"
          emojiMaxSize: "2000"
          emojiTTl: "30m"
          emojiSweepFreq: "1m"
          emojiCategoryMaxSize: "100"
          emojiCategoryTTl: "30m"
          emojiCategorySweepFreq: "1m"
          followMaxSize: "2000"
          followTTL: "30m"
          followSweepFreq: "1m"
          followRequestMaxSize: "2000"
          followRequestTTL: "30m"
          followRequestSweepFreq: "1m"
          instanceMaxSize: "2000"
          instanceTTL: "30m"
          instanceSweepFreq: "1m"
          listMaxSize: "2000"
          listTTL: "30m"
          listSweepFreq: "1m"
          listEntryMaxSize: "2000"
          listEntryTTL: "30m"
          listEntrySweepFreq: "1m"
          mediaMaxSize: "1000"
          mediaTTL: "30m"
          mediaSweepFreq: "1m"
          mentionMaxSize: "2000"
          mentionTTl: "30m"
          mentionSweepFreq: "1m"
          notificationMaxSize: "1000"
          notificationTTl: "30m"
          notificationSweepFreq: "1m"
          reportMaxSize: "100"
          reportTTl: "30m"
          reportSweepFreq: "1m"
          statusMaxSize: "2000"
          statusTTl: "30m"
          statusSweepFreq: "1m"
          statusFaveMaxSize: "2000"
          statusFaveTTL: "30m"
          statusFaveSweepFreq: "1m"
          tombstoneMaxSize: "500"
          tombstoneTTl: "30m"
          tombstoneSweepFreq: "1m"
          userMaxSize: "500"
          userTTl: "30m"
          userSweepFreq: "1m"
          webfingerMaxSize: "250"
          webfingerTTL: "24h"
          webfingerSweepFreq: "15m"
    web:
      templateBaseDir: "./web/template/" 
      assetBaseDir: "./web/assets/"
      accountsCustomCssLength: "10000"
    instance:
      exposePeers: false
      exposeSuspended: false
      exposeSuspendedWeb: false
      exposePublicTimeline: false
      deliverToSharedInboxes: true
    accounts:
      registrationOpen: true
      approvalRequired: true
      reasonRequired: true
      allowCustomCSS: false
    media:
      imageMaxSize: "10485760"
      videoMaxSize: "41943040"
      descriptionMinChars: "0"
      descriptionMaxChars: "500"
      mediaRemoteCacheDays: "30"
      emojiLocalMaxSize: "51200"
      emojiRemoteMaxSize: "102400"
    storage:
      backend: "local"
      localBasePath: "/gotosocial/storage"
      s3:
       enabled: false
       s3Endpoint: ""
       s3Proxy: false
       s3UseSSL: true
       s3AccessKey: ""
       s3SecretKey: ""
       s3Bucket: ""
    statuses:
      maxChars: "5000"
      cwMaxChars: "100"
      pollMaxOptions: "6"
      pollOptionMaxChars: "50"
      mediaMaxFiles: "6"
    letsencrypt:
      enabled: false
      port: "80"
      certDir: "/gotosocial/storage/certs"
      emailAddress: ""
    tls:
      certificateChain: ""
      certificateKey: ""
    oidc:
      enabled: false
      idpName: ""
      skipVerification: ""
      issuer: ""
      clientID: ""
      clientSecret: ""
      oidcScopes:
        - "openid"
        - "email"
        - "profile"
        - "groups"
      linkExisting: false
      adminGroups: []
    smtp:
      host: ""
      port: "0"
      userName: ""
      # password: ""
      # existingSecretName: ""
      # existingSecretKey: ""
      from: ""
      discloseRecipients: false
    syslog:
      enabled: false
      protocol: "udp"
      address:  "localhost:514"
    observability:
      requestIdHeader: "X-Request-Id"
      tracing:
        enabled: false
        transport: ""
        insecureTransport: false
    httpClient:
      timeout: "10s"
      allowIPs: []
      blockIPs: []
    advanced:
      cookiesSamesite: "lax"
      rateLimitRequests: "300"
      throttlingMultiplier: "8"
      throttlingRetryAfter: "30s"
      advancedSenderMultiplier: 2

postgresql:
  enabled: false
  image:
    pullPolicy: Always
  auth:
    username: "gotosocial"
    # password:
    database: "gotosocial"
    existingSecret: gts-postgresql-secret
  primary:
    persistence:
      enabled: true
      # existingClaim:
      # storageClass:
      size: 10Gi
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 250m
        memory: 512Mi
  volumePermissions:
    enabled: false

externalPostgresql:
  enabled: false
  # host: postgres
  # port: 5432
  ## The name of an existing secret with postgresql credentials
  # username: GoToSocial
  ## Password key to be retrieved from existing secret
  # password: GoToSocial
  ## The name of an existing secret with postgresql credentials
  # existingSecret: postgres-secrets
  ## Password key to be retrieved from existing secret
  # existingSecretPasswordKey: postgres-password
  ## TLS Mode
  # tls_mode: disable
  ## CA Cert to use when tls mode is in required state
  # ca_cert:
  database: GoToSocial

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  capabilities:
    drop: 
      - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

nodeSelector: {}

tolerations: []

affinity: {}
